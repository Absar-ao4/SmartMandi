{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\smartMandis\\\\smartmandi_frontend\\\\src\\\\components\\\\DynamicPricingDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DynamicPricingDashboard.css';\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicPricingDashboard = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [demandScore, setDemandScore] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [currentStock, setCurrentStock] = useState(0);\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [daysLeft, setDaysLeft] = useState(7);\n  const [forecastResults, setForecastResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [optimizationSummary, setOptimizationSummary] = useState(null);\n  const [analyticsData, setAnalyticsData] = useState([]);\n  const [dashboardStats, setDashboardStats] = useState({\n    totalRecommendations: 0,\n    averagePriceChange: 0,\n    averageConfidence: 0,\n    uniqueProducts: 0\n  });\n\n  // Fetch overview data on component mount\n  useEffect(() => {\n    const fetchOverviewData = async () => {\n      try {\n        const overviewResponse = await axios.get('/api/dashboard/overview');\n        if (overviewResponse.data.success && overviewResponse.data.data) {\n          const data = overviewResponse.data.data;\n          setDashboardStats({\n            totalRecommendations: data.dynamic_pricing.total_recommendations || 0,\n            averagePriceChange: data.dynamic_pricing.avg_price_change || 0,\n            averageConfidence: data.dynamic_pricing.avg_confidence || 0,\n            uniqueProducts: data.dynamic_pricing.unique_products || 0\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching overview data:', error);\n        setError('Failed to fetch overview data');\n      }\n      try {\n        // 1. Fetch products\n        const productsResponse = await axios.get('/api/products');\n        console.log('Products response:', productsResponse.data);\n        if (productsResponse.data.success && productsResponse.data.data) {\n          setProducts(productsResponse.data.data);\n          console.log('Products loaded:', productsResponse.data.data.length);\n        }\n\n        // 2. Fetch categories\n        const categoriesResponse = await axios.get('/api/products/meta/categories');\n        if (categoriesResponse.data.success && Array.isArray(categoriesResponse.data.data)) {\n          setCategories(categoriesResponse.data.data);\n          console.log('Categories:', categoriesResponse.data.data);\n        }\n      } catch (error) {\n        console.error('Failed to fetch data from backend:', error);\n      }\n    };\n    const fetchAnalyticsData = async () => {\n      try {\n        const response = await axios.get('/api/pricing/analytics');\n        const result = response.data;\n        if (Array.isArray(result.data)) {\n          // Optional: Rename _id to category for chart readability\n          const transformed = result.data.map(item => ({\n            ...item,\n            category: item._id\n          }));\n          setAnalyticsData(transformed);\n        } else {\n          console.warn('Analytics API response does not contain array in `data`');\n          setAnalyticsData([]);\n        }\n      } catch (error) {\n        console.error('Error fetching analytics data:', error);\n        setError('Failed to fetch analytics data');\n        setAnalyticsData([]);\n      }\n    };\n    const fetchOptimizationSummary = async () => {\n      try {\n        const res = await fetch(\"/api/pricing/optimization-summary\");\n        const json = await res.json();\n        if (json.success) {\n          setOptimizationSummary(json.data);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch optimization summary\", err);\n      }\n    };\n    fetchOverviewData();\n    fetchAnalyticsData();\n    fetchOptimizationSummary();\n  }, []);\n  const handleGenerateForecast = async () => {\n    if (!selectedProduct || !demandScore || !currentStock || !daysLeft || !currentPrice) {\n      setError('Please fill all required fields');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const selectedProductData = products.find(p => p.product_id === selectedProduct);\n      if (!selectedProductData) {\n        setError('Selected product not found');\n        setLoading(false);\n        return;\n      }\n      const requestBody = {\n        products: [{\n          product_id: selectedProductData.product_id,\n          product_name: selectedProductData.product_name,\n          category: selectedProductData.category || 'Unknown',\n          current_price: parseFloat(currentPrice),\n          stock_level: parseInt(currentStock),\n          days_left: parseInt(daysLeft),\n          demand_score: parseFloat(demandScore)\n        }]\n      };\n      console.log('Sending forecast request:', requestBody);\n      const response = await axios.post('/api/pricing/recommend', requestBody);\n      console.log('Forecast response:', response.data);\n      setForecastResults(response.data.data);\n      await handleGenerateForecast(); // your existing logic\n\n      // Update dashboard stats\n      setDashboardStats({\n        totalRecommendations: response.data.data.total_recommendations || 1,\n        averagePriceChange: response.data.data.avg_price_change || 63.35,\n        averageConfidence: Math.round((response.data.data.avg_confidence || 0.8) * 100),\n        uniqueProducts: response.data.data.unique_products || 1\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error generating forecast:', error);\n      setError(`Failed to generate forecast: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Dynamic Pricing Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: dashboardStats.totalRecommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Price Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: [dashboardStats.averagePriceChange.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Average Confidence\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: [dashboardStats.averageConfidence.toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unique Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: dashboardStats.uniqueProducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Price Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 400,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: analyticsData,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"avg_current_price\",\n                stroke: \"#8884d8\",\n                strokeWidth: 2,\n                name: \"Avg Current Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"avg_recommended_price\",\n                stroke: \"#82ca9d\",\n                strokeWidth: 2,\n                name: \"Avg Recommended Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-card-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generate-forecast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Generate new Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedProduct,\n              onChange: e => setSelectedProduct(e.target.value),\n              className: \"control-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a product...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 15\n              }, this), products.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: product.product_id,\n                children: product.product_name\n              }, product.product_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedCategory,\n              onChange: async e => {\n                const category = e.target.value;\n                setSelectedCategory(category);\n                setSelectedProduct(''); // Reset selected product\n\n                if (category === '') {\n                  // If \"All categories...\" selected, fetch all products\n                  try {\n                    const res = await axios.get('/api/products');\n                    if (res.data.success && Array.isArray(res.data.data)) {\n                      setProducts(res.data.data);\n                    }\n                  } catch (err) {\n                    console.error('Error fetching all products:', err);\n                  }\n                } else {\n                  // Fetch products by selected category\n                  try {\n                    const res = await axios.get(`/api/products/category/${category}`);\n                    if (res.data.success && Array.isArray(res.data.data)) {\n                      setProducts(res.data.data);\n                    }\n                  } catch (err) {\n                    console.error('Error fetching category products:', err);\n                  }\n                }\n              },\n              className: \"control-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All categories...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 13\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Current Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentStock,\n              onChange: e => {\n                const val = e.target.value;\n                if (/^\\d*$/.test(val)) setCurrentStock(val); // allow only digits\n              },\n              placeholder: \"Enter current stock\",\n              className: \"control-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Days Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: daysLeft,\n              onChange: e => {\n                const val = e.target.value;\n                if (/^\\d*$/.test(val)) setDaysLeft(val); // allow only digits\n              },\n              placeholder: \"Number of days\",\n              className: \"control-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentPrice,\n              onChange: e => {\n                const val = e.target.value;\n                if (/^\\d*$/.test(val)) setCurrentPrice(val); // allow only digits\n              },\n              placeholder: \"Price\",\n              className: \"control-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Demand Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: demandScore,\n              onChange: e => {\n                const val = e.target.value;\n                if (/^\\d*$/.test(val)) setDemandScore(val); // allow only digits\n              },\n              placeholder: \"Number of days\",\n              className: \"control-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGenerateForecast,\n            disabled: loading,\n            className: \"generate-card-btn\",\n            children: loading ? '⏳ Generating...' : ' Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 11\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            style: {\n              marginTop: '10px',\n              padding: '10px',\n              fontSize: '0.8rem'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Recommendation Generated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), forecastResults && forecastResults.recommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendation-grid\",\n      children: forecastResults.recommendations && forecastResults.recommendations.map((result, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"daily-forecast-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-metrics\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-label\",\n                children: \"Recommended Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-value\",\n                children: result.recommended_price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-label\",\n                children: \"Percentage Change \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-value\",\n                children: result.price_change_percentage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-label\",\n                children: \"Confidence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-value\",\n                children: [Math.round(result.confidence_score * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-label\",\n                children: \"Note : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"metric-value\",\n                children: result.recommendation_reason\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 8\n    }, this), optimizationSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optimization-summary-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83D\\uDCC8 Optimization Summary (Last \", optimizationSummary.period_days || 7, \" Days)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-metrics\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total Products: \", optimizationSummary.total_products]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Price Increase: \", optimizationSummary.products_with_increase]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Price Decrease: \", optimizationSummary.products_with_decrease]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"No Change: \", optimizationSummary.products_no_change]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Avg Price Change: \\u20B9\", optimizationSummary.avg_price_change.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Max Increase: \\u20B9\", optimizationSummary.max_price_increase]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Max Decrease: \\u20B9\", optimizationSummary.max_price_decrease]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicPricingDashboard, \"BtKTZOZYbiHAQV5sHF77aHjLeMQ=\");\n_c = DynamicPricingDashboard;\nexport default DynamicPricingDashboard;\nvar _c;\n$RefreshReg$(_c, \"DynamicPricingDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","ResponsiveContainer","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","jsxDEV","_jsxDEV","DynamicPricingDashboard","_s","products","setProducts","categories","setCategories","selectedProduct","setSelectedProduct","demandScore","setDemandScore","selectedCategory","setSelectedCategory","currentStock","setCurrentStock","currentPrice","setCurrentPrice","daysLeft","setDaysLeft","forecastResults","setForecastResults","loading","setLoading","error","setError","optimizationSummary","setOptimizationSummary","analyticsData","setAnalyticsData","dashboardStats","setDashboardStats","totalRecommendations","averagePriceChange","averageConfidence","uniqueProducts","fetchOverviewData","overviewResponse","get","data","success","dynamic_pricing","total_recommendations","avg_price_change","avg_confidence","unique_products","console","productsResponse","log","length","categoriesResponse","Array","isArray","fetchAnalyticsData","response","result","transformed","map","item","category","_id","warn","fetchOptimizationSummary","res","fetch","json","err","handleGenerateForecast","selectedProductData","find","p","product_id","requestBody","product_name","current_price","parseFloat","stock_level","parseInt","days_left","demand_score","post","Math","round","_error$response","_error$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","width","height","strokeDasharray","dataKey","type","stroke","strokeWidth","name","value","onChange","e","target","product","val","test","placeholder","onClick","disabled","style","marginTop","padding","fontSize","recommendations","index","recommended_price","price_change_percentage","confidence_score","recommendation_reason","period_days","total_products","products_with_increase","products_with_decrease","products_no_change","max_price_increase","max_price_decrease","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/smartMandis/smartmandi_frontend/src/components/DynamicPricingDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './DynamicPricingDashboard.css';\r\nimport {\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend\r\n} from 'recharts';\r\n\r\nconst DynamicPricingDashboard = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [demandScore, setDemandScore] = useState(0);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [currentStock, setCurrentStock] = useState(0);\r\n  const [currentPrice, setCurrentPrice] = useState(0);\r\n  const [daysLeft, setDaysLeft] = useState(7);\r\n  const [forecastResults, setForecastResults] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [optimizationSummary, setOptimizationSummary] = useState(null);\r\n  const [analyticsData,setAnalyticsData]= useState([]);\r\n  const [dashboardStats, setDashboardStats] = useState({\r\n    totalRecommendations: 0,\r\n    averagePriceChange: 0,\r\n    averageConfidence: 0,\r\n    uniqueProducts: 0\r\n  });\r\n\r\n  // Fetch overview data on component mount\r\n  useEffect(() => {\r\n\r\n  const fetchOverviewData = async () => {\r\n    try {\r\n      const overviewResponse = await axios.get('/api/dashboard/overview');\r\n      if (overviewResponse.data.success && overviewResponse.data.data) {\r\n        const data = overviewResponse.data.data;\r\n        setDashboardStats({\r\n          totalRecommendations: data.dynamic_pricing.total_recommendations || 0,\r\n          averagePriceChange: data.dynamic_pricing.avg_price_change || 0,\r\n          averageConfidence: data.dynamic_pricing.avg_confidence || 0,\r\n          uniqueProducts: data.dynamic_pricing.unique_products || 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching overview data:', error);\r\n      setError('Failed to fetch overview data');\r\n    }\r\n     try {\r\n          // 1. Fetch products\r\n          const productsResponse = await axios.get('/api/products');\r\n          console.log('Products response:', productsResponse.data);\r\n\r\n          if (productsResponse.data.success && productsResponse.data.data) {\r\n            setProducts(productsResponse.data.data);\r\n            console.log('Products loaded:', productsResponse.data.data.length);\r\n          }\r\n\r\n          // 2. Fetch categories\r\n          const categoriesResponse = await axios.get('/api/products/meta/categories');\r\n          if (categoriesResponse.data.success && Array.isArray(categoriesResponse.data.data)) {\r\n            setCategories(categoriesResponse.data.data);\r\n            console.log('Categories:', categoriesResponse.data.data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch data from backend:', error);\r\n        }\r\n\r\n  };\r\n  \r\n\r\n const fetchAnalyticsData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/pricing/analytics');\r\n        const result = response.data;\r\n\r\n        if (Array.isArray(result.data)) {\r\n          // Optional: Rename _id to category for chart readability\r\n          const transformed = result.data.map(item => ({\r\n            ...item,\r\n            category: item._id\r\n          }));\r\n\r\n          setAnalyticsData(transformed);\r\n        } else {\r\n          console.warn('Analytics API response does not contain array in `data`');\r\n          setAnalyticsData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching analytics data:', error);\r\n        setError('Failed to fetch analytics data');\r\n        setAnalyticsData([]);\r\n      }\r\n  };\r\n\r\n\r\n  const fetchOptimizationSummary = async () => {\r\n  try {\r\n    const res = await fetch(\"/api/pricing/optimization-summary\");\r\n    const json = await res.json();\r\n    if (json.success) {\r\n      setOptimizationSummary(json.data);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Failed to fetch optimization summary\", err);\r\n  }\r\n};\r\n\r\n    fetchOverviewData();\r\n    fetchAnalyticsData();\r\n    fetchOptimizationSummary();\r\n   }, []);\r\n\r\n  const handleGenerateForecast = async () => {\r\n    if (!selectedProduct || !demandScore || !currentStock || !daysLeft || !currentPrice) {\r\n      setError('Please fill all required fields');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const selectedProductData = products.find(p => p.product_id === selectedProduct);\r\n      \r\n      if (!selectedProductData) {\r\n        setError('Selected product not found');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const requestBody = {\r\n        products: [{\r\n          product_id: selectedProductData.product_id,\r\n          product_name: selectedProductData.product_name,\r\n          category: selectedProductData.category || 'Unknown',\r\n          current_price: parseFloat(currentPrice),\r\n          stock_level: parseInt(currentStock),\r\n          days_left: parseInt(daysLeft),\r\n          demand_score: parseFloat(demandScore)\r\n        }]\r\n      };\r\n      \r\n      console.log('Sending forecast request:', requestBody);\r\n      \r\n      const response = await axios.post('/api/pricing/recommend', requestBody);\r\n      \r\n      console.log('Forecast response:', response.data);\r\n      setForecastResults(response.data.data);\r\n      await handleGenerateForecast(); // your existing logic\r\n\r\n      // Update dashboard stats\r\n      setDashboardStats({\r\n      totalRecommendations: response.data.data.total_recommendations || 1,\r\n      averagePriceChange: response.data.data.avg_price_change || 63.35,\r\n      averageConfidence: Math.round((response.data.data.avg_confidence || 0.8) * 100),\r\n      uniqueProducts: response.data.data.unique_products || 1\r\n    });\r\n      \r\n    } catch (error) {\r\n      console.error('Error generating forecast:', error);\r\n      setError(`Failed to generate forecast: ${error.response?.data?.message || error.message}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-header\">\r\n        <h1 className=\"dashboard-title\">Dynamic Pricing Dashboard</h1>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {/* Stats Cards */}\r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-card\">\r\n          <h3>Total Recommendations</h3>\r\n          <p className=\"stat-value\">{dashboardStats.totalRecommendations}</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>Average Price Change</h3>\r\n          <p className=\"stat-value\">{dashboardStats.averagePriceChange.toFixed(2)}%</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>Average Confidence</h3>\r\n          <p className=\"stat-value\">{dashboardStats.averageConfidence.toFixed(2)}%</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>Unique Products</h3>\r\n          <p className=\"stat-value\">{dashboardStats.uniqueProducts}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Grid */}\r\n      <div className=\"main-content\">\r\n        {/* Analytics Chart */}\r\n        <div className=\"chart-section\">\r\n          <h2>Price Analytics</h2>\r\n          <div className=\"chart-container\">\r\n         <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={analyticsData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"category\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"avg_current_price\" \r\n                stroke=\"#8884d8\" \r\n                strokeWidth={2}\r\n                name=\"Avg Current Price\"\r\n              />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"avg_recommended_price\" \r\n                stroke=\"#82ca9d\" \r\n                strokeWidth={2}\r\n                name=\"Avg Recommended Price\"\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n      {/* Forecast Card Section - 40% width */}\r\n        <div className=\"forecast-card-section\">\r\n          <div className=\"generate-forecast-card\">\r\n          <h3>Generate new Forecast</h3>\r\n          \r\n          <div className=\"control-group\">\r\n            <label>Select Product</label>\r\n            <select \r\n              value={selectedProduct} \r\n              onChange={e => setSelectedProduct(e.target.value)}\r\n              className=\"control-select\"\r\n            >\r\n              <option value=\"\">Choose a product...</option>\r\n              {products.map(product => (\r\n                <option key={product.product_id} value={product.product_id}>\r\n                  {product.product_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"control-group\">\r\n          <label>Select Category</label>\r\n          <select \r\n            value={selectedCategory} \r\n            onChange={async (e) => {\r\n              const category = e.target.value;\r\n              setSelectedCategory(category);\r\n              setSelectedProduct(''); // Reset selected product\r\n\r\n              if (category === '') {\r\n                // If \"All categories...\" selected, fetch all products\r\n                try {\r\n                  const res = await axios.get('/api/products');\r\n                  if (res.data.success && Array.isArray(res.data.data)) {\r\n                    setProducts(res.data.data);\r\n                  }\r\n                } catch (err) {\r\n                  console.error('Error fetching all products:', err);\r\n                }\r\n              } else {\r\n                // Fetch products by selected category\r\n                try {\r\n                  const res = await axios.get(`/api/products/category/${category}`);\r\n                  if (res.data.success && Array.isArray(res.data.data)) {\r\n                    setProducts(res.data.data);\r\n                  }\r\n                } catch (err) {\r\n                  console.error('Error fetching category products:', err);\r\n                }\r\n              }\r\n            }}\r\n            className=\"control-select\"\r\n          >\r\n            <option value=\"\">All categories...</option>\r\n            {categories.map(category => (\r\n              <option key={category} value={category}>{category}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n          \r\n         <div className=\"control-group\">\r\n        <label>Current Stock</label>\r\n        <input\r\n          type=\"text\"\r\n          value={currentStock}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            if (/^\\d*$/.test(val)) setCurrentStock(val); // allow only digits\r\n          }}\r\n          placeholder=\"Enter current stock\"\r\n          className=\"control-input\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"control-group\">\r\n        <label>Days Left</label>\r\n        <input\r\n          type=\"text\"\r\n          value={daysLeft}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            if (/^\\d*$/.test(val)) setDaysLeft(val); // allow only digits\r\n          }}\r\n          placeholder=\"Number of days\"\r\n          className=\"control-input\"\r\n        />\r\n      </div>\r\n      <div className=\"control-group\">\r\n        <label>Current Price</label>\r\n        <input\r\n          type=\"text\"\r\n          value={currentPrice}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            if (/^\\d*$/.test(val)) setCurrentPrice(val); // allow only digits\r\n          }}\r\n          placeholder=\"Price\"\r\n          className=\"control-input\"\r\n        />\r\n      </div>\r\n      <div className=\"control-group\">\r\n        <label>Demand Score</label>\r\n        <input\r\n          type=\"text\"\r\n          value={demandScore}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            if (/^\\d*$/.test(val)) setDemandScore(val); // allow only digits\r\n          }}\r\n          placeholder=\"Number of days\"\r\n          className=\"control-input\"\r\n        />\r\n      </div>\r\n\r\n          \r\n          <button \r\n            onClick={handleGenerateForecast}\r\n            disabled={loading}\r\n            className=\"generate-card-btn\"\r\n          >\r\n            {loading ? '⏳ Generating...' : ' Generate'}\r\n          </button>\r\n          \r\n          {error && <div className=\"error-message\" style={{marginTop: '10px', padding: '10px', fontSize: '0.8rem'}}>{error}</div>}\r\n        </div>\r\n        </div>\r\n      </div>\r\n          \r\n      {/* Recommendations Results */}\r\n      <h3> Recommendation Generated</h3>\r\n      {forecastResults && forecastResults.recommendations && (\r\n       <div className=\"recommendation-grid\">\r\n            {forecastResults.recommendations && forecastResults.recommendations.map((result, index) => {\r\n              \r\n              return (\r\n                <div key={index} className=\"daily-forecast-card\">\r\n                  \r\n                  <div className=\"forecast-metrics\">\r\n                    <div className=\"metric\">\r\n                      <span className=\"metric-label\">Recommended Price</span>\r\n                      <span className=\"metric-value\">{result.recommended_price}</span>\r\n                    </div>\r\n                    <div className=\"metric\">\r\n                      <span className=\"metric-label\">Percentage Change </span>\r\n                      <span className=\"metric-value\">{result.price_change_percentage}</span>\r\n                    </div>\r\n                    <div className=\"metric\">\r\n                      <span className=\"metric-label\">Confidence</span>\r\n                      <span className=\"metric-value\">{Math.round(result.confidence_score * 100)}%</span>\r\n                    </div>\r\n                    <div className=\"metric\">\r\n                      <span className=\"metric-label\">Note : </span>\r\n                      <span className=\"metric-value\">{result.recommendation_reason}</span>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n      )}\r\n      {optimizationSummary && (\r\n  <div className=\"optimization-summary-card\">\r\n    <h3>📈 Optimization Summary (Last {optimizationSummary.period_days || 7} Days)</h3>\r\n    <div className=\"summary-metrics\">\r\n      <div>Total Products: {optimizationSummary.total_products}</div>\r\n      <div>Price Increase: {optimizationSummary.products_with_increase}</div>\r\n      <div>Price Decrease: {optimizationSummary.products_with_decrease}</div>\r\n      <div>No Change: {optimizationSummary.products_no_change}</div>\r\n      <div>Avg Price Change: ₹{optimizationSummary.avg_price_change.toFixed(2)}</div>\r\n      <div>Max Increase: ₹{optimizationSummary.max_price_increase}</div>\r\n      <div>Max Decrease: ₹{optimizationSummary.max_price_decrease}</div>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n        </div>\r\n\r\n      );\r\n    };\r\n\r\nexport default DynamicPricingDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}