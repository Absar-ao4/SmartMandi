{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\smartMandis\\\\smartmandi_frontend\\\\src\\\\components\\\\DemandForecastingDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './DemandForecastingDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DemandForecastingDashboard = () => {\n  _s();\n  var _forecastResults$pred3;\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [currentStock, setCurrentStock] = useState(0);\n  const [forecastDays, setForecastDays] = useState(7);\n  const [forecastResults, setForecastResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [chartData, setChartData] = useState([]);\n  const [dashboardStats, setDashboardStats] = useState({\n    totalForecast: 0,\n    predictedUnits: 0,\n    avgConfidence: 0,\n    categories: 0\n  });\n  useEffect(() => {\n    const fetchMetaData = async () => {\n      try {\n        console.log('Fetching data from backend...');\n\n        // Fetch dashboard overview stats\n        try {\n          const overviewResponse = await axios.get('/api/dashboard/overview');\n          console.log('Dashboard overview response:', overviewResponse.data);\n          if (overviewResponse.data.success && overviewResponse.data.data) {\n            const data = overviewResponse.data.data;\n            setDashboardStats({\n              totalForecast: data.demand_forecasting.total_forecasts,\n              predictedUnits: data.demand_forecasting.total_predicted_units,\n              avgConfidence: Math.round(data.demand_forecasting.avg_confidence * 100),\n              categories: data.inventory.categories\n            });\n          }\n        } catch (error) {\n          console.error('Failed to fetch dashboard overview:', error);\n        }\n        // Fetch Products, Categories, and Cities from backend\n        try {\n          // 1. Fetch products\n          const productsResponse = await axios.get('/api/products');\n          console.log('Products response:', productsResponse.data);\n          if (productsResponse.data.success && productsResponse.data.data) {\n            setProducts(productsResponse.data.data);\n            console.log('Products loaded:', productsResponse.data.data.length);\n          }\n\n          // 2. Fetch categories\n          const categoriesResponse = await axios.get('/api/products/meta/categories');\n          if (categoriesResponse.data.success && Array.isArray(categoriesResponse.data.data)) {\n            setCategories(categoriesResponse.data.data);\n            console.log('Categories:', categoriesResponse.data.data);\n          }\n\n          // 3. Fetch cities\n          const citiesResponse = await axios.get('/api/products/meta/cities');\n          if (citiesResponse.data.success && Array.isArray(citiesResponse.data.data)) {\n            setCities(citiesResponse.data.data);\n            console.log('Cities:', citiesResponse.data.data);\n          }\n        } catch (error) {\n          console.error('Failed to fetch data from backend:', error);\n        }\n\n        // Fetch demand trends for graph\n        try {\n          const res = await axios.get('http://localhost:5000/api/demand/analytics');\n          const raw = res.data.data;\n\n          // Initialize day-wise structure\n          const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n          const transformed = daysOfWeek.map(day => ({\n            day\n          }));\n\n          // Fill category data into corresponding day\n          raw.forEach(categoryItem => {\n            const category = categoryItem._id;\n            const daily = categoryItem.daily_predictions;\n            daysOfWeek.forEach((day, idx) => {\n              const dayData = daily[day];\n              transformed[idx][category] = dayData ? dayData.predicted_units : 0;\n            });\n          });\n          setChartData(transformed);\n        } catch (error) {\n          console.error('Failed to fetch demand trends:', error);\n          setChartData([]);\n        }\n      } catch (error) {\n        console.error('Error fetching metadata:', error);\n      }\n    };\n    fetchMetaData();\n  }, []);\n  const handleGenerateForecast = async () => {\n    if (!selectedProduct || !selectedCity || !currentStock || !forecastDays) {\n      setError('Please fill all required fields');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      var _response$data$data$p, _response$data$data$p2, _response$data$data$p3, _response$data$data$p4;\n      const selectedProductData = products.find(p => p.product_id === selectedProduct);\n      const requestBody = {\n        products: [{\n          product_name: (selectedProductData === null || selectedProductData === void 0 ? void 0 : selectedProductData.product_name) || selectedProduct\n        }],\n        forecast_days: parseInt(forecastDays),\n        cities: [selectedCity]\n      };\n      console.log('Sending forecast request:', requestBody);\n      const response = await axios.post('/api/demand/predict', requestBody);\n      console.log('Forecast response:', response.data);\n      setForecastResults(response.data.data);\n\n      // Update dashboard stats\n      setDashboardStats({\n        totalForecast: response.data.data.total_predictions || 1,\n        predictedUnits: ((_response$data$data$p = response.data.data.predictions) === null || _response$data$data$p === void 0 ? void 0 : _response$data$data$p.reduce((sum, p) => sum + p.predicted_units, 0)) || 82,\n        avgConfidence: Math.round((((_response$data$data$p2 = response.data.data.predictions) === null || _response$data$data$p2 === void 0 ? void 0 : _response$data$data$p2.reduce((sum, p) => sum + (p.confidence_score || 0.8), 0)) / ((_response$data$data$p3 = response.data.data.predictions) === null || _response$data$data$p3 === void 0 ? void 0 : _response$data$data$p3.length) || 0.78) * 100),\n        categories: new Set((_response$data$data$p4 = response.data.data.predictions) === null || _response$data$data$p4 === void 0 ? void 0 : _response$data$data$p4.map(p => p.category)).size || 1\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error generating forecast:', error);\n      setError(`Failed to generate forecast: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n    setLoading(false);\n  };\n  const calculateStockRecommendation = (predictedUnits, currentStock) => {\n    const difference = predictedUnits - currentStock;\n    const percentage = Math.round(difference / currentStock * 100);\n    if (difference > 0) {\n      return {\n        action: 'Buy More',\n        percentage: `+${percentage}%`,\n        className: 'recommendation-buy'\n      };\n    } else {\n      return {\n        action: 'Buy Less',\n        percentage: `${percentage}%`,\n        className: 'recommendation-sell'\n      };\n    }\n  };\n  const colors = {\n    Dairy: '#4fc3f7',\n    Bakery: '#9c27b0',\n    Produce: '#66bb6a',\n    Meat: '#ffa726',\n    Fruit: '#ff5252'\n  };\n  const allCategories = chartData.length ? Object.keys(chartData[0]).filter(key => key !== 'day') : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Welcome to Demand Forecasting Dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"AI driven demand prediction and inventory optimization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: dashboardStats.totalForecast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-sublabel\",\n            children: \"This Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: dashboardStats.predictedUnits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Predicted Units\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-sublabel\",\n            children: \"Next 7 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: dashboardStats.avgConfidence\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Avg Confidence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-sublabel\",\n            children: \"Model Accuracy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-icon\",\n          children: \"\\uD83C\\uDFF7\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: dashboardStats.categories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-sublabel\",\n            children: \"Analyzed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCC8 Demand Trends by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: chartData,\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), allCategories.map(cat => /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: cat,\n              stroke: colors[cat] || '#8884d8',\n              strokeWidth: 2,\n              dot: {\n                r: 4\n              },\n              activeDot: {\n                r: 6\n              }\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-card-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generate-forecast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Generate new Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedProduct,\n              onChange: e => setSelectedProduct(e.target.value),\n              className: \"control-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a product...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 15\n              }, this), products.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: product.product_id,\n                children: product.product_name\n              }, product.product_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedCity,\n              onChange: e => setSelectedCity(e.target.value),\n              className: \"control-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose a city...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 15\n              }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city,\n                children: city\n              }, city, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedCategory,\n              onChange: async e => {\n                const category = e.target.value;\n                setSelectedCategory(category);\n                setSelectedProduct(''); // Reset selected product\n\n                if (category === '') {\n                  // If \"All categories...\" selected, fetch all products\n                  try {\n                    const res = await axios.get('/api/products');\n                    if (res.data.success && Array.isArray(res.data.data)) {\n                      setProducts(res.data.data);\n                    }\n                  } catch (err) {\n                    console.error('Error fetching all products:', err);\n                  }\n                } else {\n                  // Fetch products by selected category\n                  try {\n                    const res = await axios.get(`/api/products/category/${category}`);\n                    if (res.data.success && Array.isArray(res.data.data)) {\n                      setProducts(res.data.data);\n                    }\n                  } catch (err) {\n                    console.error('Error fetching category products:', err);\n                  }\n                }\n              },\n              className: \"control-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All categories...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 13\n              }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Current Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentStock,\n              onChange: e => {\n                const val = e.target.value;\n                if (/^\\d*$/.test(val)) setCurrentStock(val); // allow only digits\n              },\n              placeholder: \"Enter current stock\",\n              className: \"control-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Forecast Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: forecastDays,\n              onChange: e => {\n                const val = e.target.value;\n                if (/^\\d*$/.test(val)) setForecastDays(val); // allow only digits\n              },\n              placeholder: \"Number of days\",\n              className: \"control-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGenerateForecast,\n            disabled: loading,\n            className: \"generate-card-btn\",\n            children: loading ? '⏳ Generating...' : '🚀 Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 11\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            style: {\n              marginTop: '10px',\n              padding: '10px',\n              fontSize: '0.8rem'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), forecastResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCCA Forecast Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Generated \", forecastResults.total_predictions, \" forecasts for \", selectedCity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), ((_forecastResults$pred, _forecastResults$pred2) => {\n          const totalPredictedUnits = ((_forecastResults$pred = forecastResults.predictions) === null || _forecastResults$pred === void 0 ? void 0 : _forecastResults$pred.reduce((sum, p) => sum + p.predicted_units, 0)) || 0;\n          const avgConfidence = ((_forecastResults$pred2 = forecastResults.predictions) === null || _forecastResults$pred2 === void 0 ? void 0 : _forecastResults$pred2.length) > 0 ? Math.round(forecastResults.predictions.reduce((sum, p) => sum + p.confidence_score, 0) / forecastResults.predictions.length * 100) : 0;\n          const stockDifference = totalPredictedUnits - currentStock;\n          const stockDifferencePercentage = currentStock > 0 ? Math.round(stockDifference / currentStock * 100) : 0;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-summary-metrics\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: [\"Total Predicted Units (\", forecastDays, \" days)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: totalPredictedUnits\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Average Confidence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-value\",\n                children: [avgConfidence, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-metric\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"summary-label\",\n                children: \"Stock Difference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `summary-value ${stockDifference >= 0 ? 'positive' : 'negative'}`,\n                children: [stockDifference >= 0 ? '+' : '', stockDifference, \" (\", stockDifferencePercentage >= 0 ? '+' : '', stockDifferencePercentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-forecast-grid\",\n        children: forecastResults.predictions && forecastResults.predictions.map((result, index) => {\n          const recommendation = calculateStockRecommendation(result.predicted_units, Math.round(currentStock / forecastDays));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-forecast-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-date\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: new Date(result.forecast_date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"day\",\n                children: result.day_of_week\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-metrics\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Predicted Units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: result.predicted_units\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Confidence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [Math.round(result.confidence_score * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `daily-recommendation ${recommendation.className}`,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: recommendation.action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), forecastResults && ((_forecastResults$pred3 = forecastResults.predictions) === null || _forecastResults$pred3 === void 0 ? void 0 : _forecastResults$pred3.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-analysis\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCC8 Forecast Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-grid\",\n        children: (() => {\n          // Find the prediction with max and min predicted_units\n          const maxPrediction = forecastResults.predictions.reduce((max, p) => p.predicted_units > max.predicted_units ? p : max);\n          const minPrediction = forecastResults.predictions.reduce((min, p) => p.predicted_units < min.predicted_units ? p : min);\n\n          // Calculate percentage difference (relative to average or to each other)\n          const avgUnits = forecastResults.predictions.reduce((sum, p) => sum + p.predicted_units, 0) / forecastResults.predictions.length;\n          const maxDiffPercent = Math.round((maxPrediction.predicted_units - avgUnits) / avgUnits * 100);\n          const minDiffPercent = Math.round((minPrediction.predicted_units - avgUnits) / avgUnits * 100);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Peak Demand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"analysis-value\",\n                children: [maxPrediction.day_of_week, \" \", maxDiffPercent >= 0 ? `+${maxDiffPercent}%` : `${maxDiffPercent}%`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"analysis-detail\",\n                children: [\"Highest predicted demand on \", maxPrediction.day_of_week]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analysis-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Lowest Demand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"analysis-value\",\n                children: [minPrediction.day_of_week, \" \", minDiffPercent >= 0 ? `+${minDiffPercent}%` : `${minDiffPercent}%`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"analysis-detail\",\n                children: [\"Lowest predicted demand on \", minPrediction.day_of_week]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(DemandForecastingDashboard, \"ulolDNGegXmfg5lGg0rZCI2tIpY=\");\n_c = DemandForecastingDashboard;\nexport default DemandForecastingDashboard;\nvar _c;\n$RefreshReg$(_c, \"DemandForecastingDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DemandForecastingDashboard","_s","_forecastResults$pred3","products","setProducts","categories","setCategories","cities","setCities","selectedProduct","setSelectedProduct","selectedCity","setSelectedCity","selectedCategory","setSelectedCategory","currentStock","setCurrentStock","forecastDays","setForecastDays","forecastResults","setForecastResults","loading","setLoading","error","setError","chartData","setChartData","dashboardStats","setDashboardStats","totalForecast","predictedUnits","avgConfidence","fetchMetaData","console","log","overviewResponse","get","data","success","demand_forecasting","total_forecasts","total_predicted_units","Math","round","avg_confidence","inventory","productsResponse","length","categoriesResponse","Array","isArray","citiesResponse","res","raw","daysOfWeek","transformed","map","day","forEach","categoryItem","category","_id","daily","daily_predictions","idx","dayData","predicted_units","handleGenerateForecast","_response$data$data$p","_response$data$data$p2","_response$data$data$p3","_response$data$data$p4","selectedProductData","find","p","product_id","requestBody","product_name","forecast_days","parseInt","response","post","total_predictions","predictions","reduce","sum","confidence_score","Set","size","_error$response","_error$response$data","message","calculateStockRecommendation","difference","percentage","action","className","colors","Dairy","Bakery","Produce","Meat","Fruit","allCategories","Object","keys","filter","key","children","fileName","_jsxFileName","lineNumber","columnNumber","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","cat","Line","type","stroke","strokeWidth","dot","r","activeDot","value","onChange","e","target","product","city","err","val","test","placeholder","onClick","disabled","style","marginTop","padding","fontSize","_forecastResults$pred","_forecastResults$pred2","totalPredictedUnits","stockDifference","stockDifferencePercentage","result","index","recommendation","Date","forecast_date","toLocaleDateString","day_of_week","maxPrediction","max","minPrediction","min","avgUnits","maxDiffPercent","minDiffPercent","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/smartMandis/smartmandi_frontend/src/components/DemandForecastingDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './DemandForecastingDashboard.css';\r\n\r\nconst DemandForecastingDashboard = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [selectedCity, setSelectedCity] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [currentStock, setCurrentStock] = useState(0);\r\n  const [forecastDays, setForecastDays] = useState(7);\r\n  const [forecastResults, setForecastResults] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [chartData, setChartData] = useState([]);\r\n  const [dashboardStats, setDashboardStats] = useState({\r\n    totalForecast: 0,\r\n    predictedUnits: 0,\r\n    avgConfidence: 0,\r\n    categories: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchMetaData = async () => {\r\n      try {\r\n        console.log('Fetching data from backend...');\r\n        \r\n        // Fetch dashboard overview stats\r\n        try {\r\n          const overviewResponse = await axios.get('/api/dashboard/overview');\r\n          console.log('Dashboard overview response:', overviewResponse.data);\r\n          if (overviewResponse.data.success && overviewResponse.data.data) {\r\n            const data = overviewResponse.data.data;\r\n            setDashboardStats({\r\n              totalForecast: data.demand_forecasting.total_forecasts,\r\n              predictedUnits: data.demand_forecasting.total_predicted_units,\r\n              avgConfidence: Math.round(data.demand_forecasting.avg_confidence * 100),\r\n              categories: data.inventory.categories\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch dashboard overview:', error);\r\n        }\r\n       // Fetch Products, Categories, and Cities from backend\r\n        try {\r\n          // 1. Fetch products\r\n          const productsResponse = await axios.get('/api/products');\r\n          console.log('Products response:', productsResponse.data);\r\n\r\n          if (productsResponse.data.success && productsResponse.data.data) {\r\n            setProducts(productsResponse.data.data);\r\n            console.log('Products loaded:', productsResponse.data.data.length);\r\n          }\r\n\r\n          // 2. Fetch categories\r\n          const categoriesResponse = await axios.get('/api/products/meta/categories');\r\n          if (categoriesResponse.data.success && Array.isArray(categoriesResponse.data.data)) {\r\n            setCategories(categoriesResponse.data.data);\r\n            console.log('Categories:', categoriesResponse.data.data);\r\n          }\r\n\r\n          // 3. Fetch cities\r\n          const citiesResponse = await axios.get('/api/products/meta/cities');\r\n          if (citiesResponse.data.success && Array.isArray(citiesResponse.data.data)) {\r\n            setCities(citiesResponse.data.data);\r\n            console.log('Cities:', citiesResponse.data.data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch data from backend:', error);\r\n        }\r\n\r\n        // Fetch demand trends for graph\r\n        try {\r\n           const res = await axios.get('http://localhost:5000/api/demand/analytics');\r\n        const raw = res.data.data;\r\n\r\n        // Initialize day-wise structure\r\n        const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n        const transformed = daysOfWeek.map(day => ({ day }));\r\n\r\n        // Fill category data into corresponding day\r\n        raw.forEach(categoryItem => {\r\n          const category = categoryItem._id;\r\n          const daily = categoryItem.daily_predictions;\r\n\r\n          daysOfWeek.forEach((day, idx) => {\r\n            const dayData = daily[day];\r\n            transformed[idx][category] = dayData ? dayData.predicted_units : 0;\r\n          });\r\n        });\r\n\r\n        setChartData(transformed);\r\n        } catch (error) {\r\n          console.error('Failed to fetch demand trends:', error);\r\n          setChartData([]);\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching metadata:', error);\r\n      }\r\n    };\r\n\r\n    fetchMetaData();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleGenerateForecast = async () => {\r\n    if (!selectedProduct || !selectedCity || !currentStock || !forecastDays) {\r\n      setError('Please fill all required fields');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const selectedProductData = products.find(p => p.product_id === selectedProduct);\r\n      \r\n      const requestBody = {\r\n        products: [{ product_name: selectedProductData?.product_name || selectedProduct }],\r\n        forecast_days: parseInt(forecastDays),\r\n        cities: [selectedCity]\r\n      };\r\n      \r\n      console.log('Sending forecast request:', requestBody);\r\n      \r\n      const response = await axios.post('/api/demand/predict', requestBody);\r\n      \r\n      console.log('Forecast response:', response.data);\r\n      setForecastResults(response.data.data);\r\n      \r\n      // Update dashboard stats\r\n      setDashboardStats({\r\n        totalForecast: response.data.data.total_predictions || 1,\r\n        predictedUnits: response.data.data.predictions?.reduce((sum, p) => sum + p.predicted_units, 0) || 82,\r\n        avgConfidence: Math.round((response.data.data.predictions?.reduce((sum, p) => sum + (p.confidence_score || 0.8), 0) / response.data.data.predictions?.length || 0.78) * 100),\r\n        categories: new Set(response.data.data.predictions?.map(p => p.category)).size || 1\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error generating forecast:', error);\r\n      setError(`Failed to generate forecast: ${error.response?.data?.message || error.message}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n\r\n  const calculateStockRecommendation = (predictedUnits, currentStock) => {\r\n    const difference = predictedUnits - currentStock;\r\n    const percentage = Math.round((difference / currentStock) * 100);\r\n    \r\n    if (difference > 0) {\r\n      return {\r\n        action: 'Buy More',\r\n        percentage: `+${percentage}%`,\r\n        className: 'recommendation-buy'\r\n      };\r\n    } else {\r\n      return {\r\n        action: 'Buy Less',\r\n        percentage: `${percentage}%`,\r\n        className: 'recommendation-sell'\r\n      };\r\n    }\r\n  };\r\n   const colors = {\r\n    Dairy: '#4fc3f7',\r\n    Bakery: '#9c27b0',\r\n    Produce: '#66bb6a',\r\n    Meat: '#ffa726',\r\n    Fruit: '#ff5252'\r\n  };\r\n\r\n  const allCategories = chartData.length\r\n    ? Object.keys(chartData[0]).filter(key => key !== 'day')\r\n    : [];\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h1> Welcome to Demand Forecasting Dashboard!</h1>\r\n        <p>AI driven demand prediction and inventory optimization</p>\r\n      </div>\r\n\r\n      {/* Dashboard Stats */}\r\n      <div className=\"dashboard-stats\">\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-icon\">📊</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-value\">{dashboardStats.totalForecast}</div>\r\n            <div className=\"stat-label\">Total Forecast</div>\r\n            <div className=\"stat-sublabel\">This Week</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-icon\">🔄</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-value\">{dashboardStats.predictedUnits}</div>\r\n            <div className=\"stat-label\">Predicted Units</div>\r\n            <div className=\"stat-sublabel\">Next 7 days</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-icon\">📈</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-value\">{dashboardStats.avgConfidence}</div>\r\n            <div className=\"stat-label\">Avg Confidence</div>\r\n            <div className=\"stat-sublabel\">Model Accuracy</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-icon\">🏷️</div>\r\n          <div className=\"stat-content\">\r\n            <div className=\"stat-value\">{dashboardStats.categories}</div>\r\n            <div className=\"stat-label\">Categories</div>\r\n            <div className=\"stat-sublabel\">Analyzed</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Layout - Graph and Forecast Card Side by Side */}\r\n      <div className=\"main-content-layout\">\r\n        {/* Graph Section - 60% width */}\r\n        <div className=\"graph-section\">\r\n          <h2>📈 Demand Trends by Category</h2>\r\n          <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"day\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              {allCategories.map(cat => (\r\n                <Line\r\n                  key={cat}\r\n                  type=\"monotone\"\r\n                  dataKey={cat}\r\n                  stroke={colors[cat] || '#8884d8'}\r\n                  strokeWidth={2}\r\n                  dot={{ r: 4 }}\r\n                  activeDot={{ r: 6 }}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        {/* Forecast Card Section - 40% width */}\r\n        <div className=\"forecast-card-section\">\r\n          <div className=\"generate-forecast-card\">\r\n          <h3>Generate new Forecast</h3>\r\n          \r\n          <div className=\"control-group\">\r\n            <label>Select Product</label>\r\n            <select \r\n              value={selectedProduct} \r\n              onChange={e => setSelectedProduct(e.target.value)}\r\n              className=\"control-select\"\r\n            >\r\n              <option value=\"\">Choose a product...</option>\r\n              {products.map(product => (\r\n                <option key={product.product_id} value={product.product_id}>\r\n                  {product.product_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"control-group\">\r\n            <label>Select City</label>\r\n            <select \r\n              value={selectedCity} \r\n              onChange={e => setSelectedCity(e.target.value)}\r\n              className=\"control-select\"\r\n            >\r\n              <option value=\"\">Choose a city...</option>\r\n              {cities.map(city => (\r\n                <option key={city} value={city}>{city}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"control-group\">\r\n          <label>Select Category</label>\r\n          <select \r\n            value={selectedCategory} \r\n            onChange={async (e) => {\r\n              const category = e.target.value;\r\n              setSelectedCategory(category);\r\n              setSelectedProduct(''); // Reset selected product\r\n\r\n              if (category === '') {\r\n                // If \"All categories...\" selected, fetch all products\r\n                try {\r\n                  const res = await axios.get('/api/products');\r\n                  if (res.data.success && Array.isArray(res.data.data)) {\r\n                    setProducts(res.data.data);\r\n                  }\r\n                } catch (err) {\r\n                  console.error('Error fetching all products:', err);\r\n                }\r\n              } else {\r\n                // Fetch products by selected category\r\n                try {\r\n                  const res = await axios.get(`/api/products/category/${category}`);\r\n                  if (res.data.success && Array.isArray(res.data.data)) {\r\n                    setProducts(res.data.data);\r\n                  }\r\n                } catch (err) {\r\n                  console.error('Error fetching category products:', err);\r\n                }\r\n              }\r\n            }}\r\n            className=\"control-select\"\r\n          >\r\n            <option value=\"\">All categories...</option>\r\n            {categories.map(category => (\r\n              <option key={category} value={category}>{category}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n          \r\n         <div className=\"control-group\">\r\n        <label>Current Stock</label>\r\n        <input\r\n          type=\"text\"\r\n          value={currentStock}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            if (/^\\d*$/.test(val)) setCurrentStock(val); // allow only digits\r\n          }}\r\n          placeholder=\"Enter current stock\"\r\n          className=\"control-input\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"control-group\">\r\n        <label>Forecast Days</label>\r\n        <input\r\n          type=\"text\"\r\n          value={forecastDays}\r\n          onChange={(e) => {\r\n            const val = e.target.value;\r\n            if (/^\\d*$/.test(val)) setForecastDays(val); // allow only digits\r\n          }}\r\n          placeholder=\"Number of days\"\r\n          className=\"control-input\"\r\n        />\r\n      </div>\r\n\r\n          \r\n          <button \r\n            onClick={handleGenerateForecast}\r\n            disabled={loading}\r\n            className=\"generate-card-btn\"\r\n          >\r\n            {loading ? '⏳ Generating...' : '🚀 Generate'}\r\n          </button>\r\n          \r\n          {error && <div className=\"error-message\" style={{marginTop: '10px', padding: '10px', fontSize: '0.8rem'}}>{error}</div>}\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Forecast Results */}\r\n      {forecastResults && (\r\n        <div className=\"forecast-results\">\r\n          <h2>📊 Forecast Result</h2>\r\n          <div className=\"results-summary\">\r\n            <p>Generated {forecastResults.total_predictions} forecasts for {selectedCity}</p>\r\n            {(() => {\r\n              const totalPredictedUnits = forecastResults.predictions?.reduce((sum, p) => sum + p.predicted_units, 0) || 0;\r\n              const avgConfidence = forecastResults.predictions?.length > 0 \r\n                ? Math.round((forecastResults.predictions.reduce((sum, p) => sum + p.confidence_score, 0) / forecastResults.predictions.length) * 100)\r\n                : 0;\r\n              const stockDifference = totalPredictedUnits - currentStock;\r\n              const stockDifferencePercentage = currentStock > 0 ? Math.round((stockDifference / currentStock) * 100) : 0;\r\n              \r\n              return (\r\n                <div className=\"forecast-summary-metrics\">\r\n                  <div className=\"summary-metric\">\r\n                    <span className=\"summary-label\">Total Predicted Units ({forecastDays} days)</span>\r\n                    <span className=\"summary-value\">{totalPredictedUnits}</span>\r\n                  </div>\r\n                  <div className=\"summary-metric\">\r\n                    <span className=\"summary-label\">Average Confidence</span>\r\n                    <span className=\"summary-value\">{avgConfidence}%</span>\r\n                  </div>\r\n                  <div className=\"summary-metric\">\r\n                    <span className=\"summary-label\">Stock Difference</span>\r\n                    <span className={`summary-value ${stockDifference >= 0 ? 'positive' : 'negative'}`}>\r\n                      {stockDifference >= 0 ? '+' : ''}{stockDifference} ({stockDifferencePercentage >= 0 ? '+' : ''}{stockDifferencePercentage}%)\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n          </div>\r\n          \r\n          <div className=\"daily-forecast-grid\">\r\n            {forecastResults.predictions && forecastResults.predictions.map((result, index) => {\r\n              const recommendation = calculateStockRecommendation(result.predicted_units, Math.round(currentStock / forecastDays));\r\n              \r\n              return (\r\n                <div key={index} className=\"daily-forecast-card\">\r\n                  <div className=\"forecast-date\">\r\n                    <span className=\"date\">{new Date(result.forecast_date).toLocaleDateString()}</span>\r\n                    <span className=\"day\">{result.day_of_week}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"forecast-metrics\">\r\n                    <div className=\"metric\">\r\n                      <span className=\"metric-label\">Predicted Units</span>\r\n                      <span className=\"metric-value\">{result.predicted_units}</span>\r\n                    </div>\r\n                    \r\n                    <div className=\"metric\">\r\n                      <span className=\"metric-label\">Confidence</span>\r\n                      <span className=\"metric-value\">{Math.round(result.confidence_score * 100)}%</span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className={`daily-recommendation ${recommendation.className}`}>\r\n                    <span>{recommendation.action}</span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Forecast Analysis */}\r\n      {forecastResults && forecastResults.predictions?.length > 0 && (\r\n        <div className=\"forecast-analysis\">\r\n          <h2>📈 Forecast Analysis</h2>\r\n          <div className=\"analysis-grid\">\r\n            {(() => {\r\n              // Find the prediction with max and min predicted_units\r\n              const maxPrediction = forecastResults.predictions.reduce((max, p) => p.predicted_units > max.predicted_units ? p : max);\r\n              const minPrediction = forecastResults.predictions.reduce((min, p) => p.predicted_units < min.predicted_units ? p : min);\r\n\r\n              // Calculate percentage difference (relative to average or to each other)\r\n              const avgUnits = forecastResults.predictions.reduce((sum, p) => sum + p.predicted_units, 0) / forecastResults.predictions.length;\r\n              const maxDiffPercent = Math.round(((maxPrediction.predicted_units - avgUnits) / avgUnits) * 100);\r\n              const minDiffPercent = Math.round(((minPrediction.predicted_units - avgUnits) / avgUnits) * 100);\r\n\r\n              return (\r\n                <>\r\n                  <div className=\"analysis-card\">\r\n                    <h3>Peak Demand</h3>\r\n                    <p className=\"analysis-value\">{maxPrediction.day_of_week} {maxDiffPercent >= 0 ? `+${maxDiffPercent}%` : `${maxDiffPercent}%`}</p>\r\n                    <p className=\"analysis-detail\">Highest predicted demand on {maxPrediction.day_of_week}</p>\r\n                  </div>\r\n                  <div className=\"analysis-card\">\r\n                    <h3>Lowest Demand</h3>\r\n                    <p className=\"analysis-value\">{minPrediction.day_of_week} {minDiffPercent >= 0 ? `+${minDiffPercent}%` : `${minDiffPercent}%`}</p>\r\n                    <p className=\"analysis-detail\">Lowest predicted demand on {minPrediction.day_of_week}</p>\r\n                  </div>\r\n                </>\r\n              );\r\n            })()}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemandForecastingDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}